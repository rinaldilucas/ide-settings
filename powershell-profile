Set-PSReadLineKeyHandler -Chord "Tab" -Function AcceptSuggestion
Set-PSReadLineKeyHandler -Chord "RightArrow" -Function ForwardWord
Set-PSReadlineKeyHandler -Key UpArrow -Function HistorySearchBackward
Set-PSReadlineKeyHandler -Key DownArrow -Function HistorySearchForward
Set-PSReadLineOption -Colors @{ "Command" = '#1b80a7' }
function save ([string]$branchId = "") {
    $currentDir = Get-Location
    $rootFolder = (Get-Item -Path ".").BaseName
    $currentBranch = git rev-parse --abbrev-ref HEAD

    if ($rootFolder -eq "libs-v2") {
        $levelsUp = "../"
    } else {
        $levelsUp = "../../"
    }

    cd $levelsUp

    if ($branchId) {
        git add .
        git stash -m "$branchId"
        git checkout master
        git pull
        git checkout -b $branchId
        git stash apply 0
        git add .
        git commit -m "#${branchId} - client/${rootFolder}"
        git push origin $branchId
        git checkout master
    }
    else {
        git add .
        git commit -m "#${currentBranch} - client/${rootFolder}"
        git push origin $currentBranch
    }

    Set-Location $currentDir
}
function libpubdocs {
  cd projects/behaviors-lib
  npm run deploy
  npm run update docs
  cd ../ui-lib
  npm run deploy
  npm run update docs
}
function nis { npm install && ng s }  
function dev { npm start }  
function pull { git pull }  
function push { git push }
function fetch { git fetch -p }  
function master { git checkout master && git pull }
function checkout([string]$branchId) { git checkout ${branchId} }  
function branch([string]$branchId) { git checkout master && git pull origin && git checkout -b $branchId }  
function savenow { git add . && git commit -m "$(Get-Date)" && git push }  
function oldlibpub { npm run patch && npm run build && npm run publish }
function oldlibinst { npm i @forlogic/qex@latest }
function init { git commit --allow-empty -n -m "misc: init repo" }
